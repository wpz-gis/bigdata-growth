# DP核心思想

* 重叠子问题
  * 可以使用"备忘录"和"DPTable"来记录中间结果
* 最优子结构

```
可以从子问题的最优结果推出更大规模问题的最优结果。让你算每个班的最优成绩就是子问题，你知道所有子问题的答案后，就可以借此推出全校学生的最优成绩这个规模更大的问题的答案。
```

* 状态转移方程

## 三要素框架

* **明确 base case -> 明确「状态」-> 明确「选择」 -> 定义 dp 数组/函数的含义**。

```python
# 初始化 base case
dp[0][0][...] = base
# 进行状态转移
for 状态1 in 状态1的所有取值：
    for 状态2 in 状态2的所有取值：
        for ...
            dp[状态1][状态2][...] = 求最值(选择1，选择2...)
```

### Demo

* 比如计算最长递增子序列，需要定义好dp数组，然后只要知道dp[i]=x这个含义是什么，在最长递增子序列里:**dp[i] 表示以 nums[i] 这个数结尾的最长递增子序列的长度。**



## 股票最佳买卖时机问题

* 根据状态去做穷
